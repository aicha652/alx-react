{"ast":null,"code":"var _jsxFileName = \"/home/projects/alx-react/0x04-React_inline_styling/task_0/dashboard/src/CourseList/CourseList.js\";\nimport React from 'react';\nimport CourseListRow from './CourseListRow';\nimport './CourseList.css';\nimport PropTypes from 'prop-types';\nimport CourseShape from './CourseShape';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseList({\n  listCourses\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"CourseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"Available courses\",\n        isHeader: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"Course name\",\n        textSecondCell: \"Credit\",\n        isHeader: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: listCourses.length ? listCourses.map(elmt => /*#__PURE__*/_jsxDEV(CourseListRow, {\n        isHeader: false,\n        textFirstCell: elmt.name,\n        textSecondCell: elmt.credit\n      }, elmt.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"No course available yet\",\n        isHeader: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = CourseList;\nCourseList.propTypes = {\n  listCourses: PropTypes.arrayOf(CourseShape)\n};\nCourseList.defaultProps = {\n  listCourses: []\n};\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","CourseListRow","PropTypes","CourseShape","jsxDEV","_jsxDEV","CourseList","listCourses","id","children","textFirstCell","isHeader","fileName","_jsxFileName","lineNumber","columnNumber","textSecondCell","length","map","elmt","name","credit","_c","propTypes","arrayOf","defaultProps","$RefreshReg$"],"sources":["/home/projects/alx-react/0x04-React_inline_styling/task_0/dashboard/src/CourseList/CourseList.js"],"sourcesContent":["import React from 'react';\r\nimport CourseListRow from './CourseListRow';\r\nimport './CourseList.css';\r\nimport PropTypes from 'prop-types';\r\nimport CourseShape from './CourseShape';\r\n\r\nfunction CourseList ({ listCourses }) {\r\n    return (\r\n        <table id=\"CourseList\">\r\n            <thead>\r\n                <CourseListRow textFirstCell={ \"Available courses\" } isHeader={ true } />\r\n                <CourseListRow textFirstCell={ \"Course name\" } textSecondCell={ \"Credit\" } isHeader={ true } />\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    listCourses.length ? (\r\n                        listCourses.map((elmt) => (\r\n                            <CourseListRow\r\n                                isHeader={ false }\r\n                                key={ elmt.id }\r\n                                textFirstCell={ elmt.name }\r\n                                textSecondCell={ elmt.credit }\r\n                            />\r\n                        )))\r\n                        :\r\n                        <CourseListRow textFirstCell={ \"No course available yet\" } isHeader={ false } />\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nCourseList.propTypes = {\r\n    listCourses: PropTypes.arrayOf(CourseShape),\r\n};\r\n\r\nCourseList.defaultProps = {\r\n    listCourses: [],\r\n};\r\n\r\nexport default CourseList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAE;EAAEC;AAAY,CAAC,EAAE;EAClC,oBACIF,OAAA;IAAOG,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAClBJ,OAAA;MAAAI,QAAA,gBACIJ,OAAA,CAACJ,aAAa;QAACS,aAAa,EAAG,mBAAqB;QAACC,QAAQ,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzEV,OAAA,CAACJ,aAAa;QAACS,aAAa,EAAG,aAAe;QAACM,cAAc,EAAG,QAAU;QAACL,QAAQ,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACRV,OAAA;MAAAI,QAAA,EAEQF,WAAW,CAACU,MAAM,GACdV,WAAW,CAACW,GAAG,CAAEC,IAAI,iBACjBd,OAAA,CAACJ,aAAa;QACVU,QAAQ,EAAG,KAAO;QAElBD,aAAa,EAAGS,IAAI,CAACC,IAAM;QAC3BJ,cAAc,EAAGG,IAAI,CAACE;MAAQ,GAFxBF,IAAI,CAACX,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACJ,CAAC,gBAEFV,OAAA,CAACJ,aAAa;QAACS,aAAa,EAAG,yBAA2B;QAACC,QAAQ,EAAG;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAACO,EAAA,GAxBQhB,UAAU;AA0BnBA,UAAU,CAACiB,SAAS,GAAG;EACnBhB,WAAW,EAAEL,SAAS,CAACsB,OAAO,CAACrB,WAAW;AAC9C,CAAC;AAEDG,UAAU,CAACmB,YAAY,GAAG;EACtBlB,WAAW,EAAE;AACjB,CAAC;AAED,eAAeD,UAAU;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}